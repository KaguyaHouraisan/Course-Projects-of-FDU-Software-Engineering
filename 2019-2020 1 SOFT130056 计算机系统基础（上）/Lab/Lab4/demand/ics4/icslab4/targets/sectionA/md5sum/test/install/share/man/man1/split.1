.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.43.3.
.TH SPLIT "1" "November 2019" "GNU coreutils 8.24" "User Commands"
.SH NAME
split \- split a file into pieces
.SH SYNOPSIS
.B split
[\fIOPTION\fR]... [\fIFILE \fR[\fIPREFIX\fR]]
.SH DESCRIPTION
.\" Add any additional description here
.PP
Output pieces of FILE to PREFIXaa, PREFIXab, ...;
default size is 1000 lines, and default PREFIX is 'x'.
.PP
With no FILE, or when FILE is \-, read standard input.
.PP
Mandatory arguments to long options are mandatory for short options too.
.TP
\fB\-a\fR, \fB\-\-suffix\-length\fR=\fIN\fR
generate suffixes of length N (default 2)
.TP
\fB\-\-additional\-suffix\fR=\fISUFFIX\fR
append an additional SUFFIX to file names
.TP
\fB\-b\fR, \fB\-\-bytes\fR=\fISIZE\fR
put SIZE bytes per output file
.TP
\fB\-C\fR, \fB\-\-line\-bytes\fR=\fISIZE\fR
put at most SIZE bytes of records per output file
.TP
\fB\-d\fR, \fB\-\-numeric\-suffixes\fR[=\fIFROM\fR]
use numeric suffixes instead of alphabetic;
FROM changes the start value (default 0)
.TP
\fB\-e\fR, \fB\-\-elide\-empty\-files\fR
do not generate empty output files with '\-n'
.TP
\fB\-\-filter\fR=\fICOMMAND\fR
write to shell COMMAND; file name is $FILE
.TP
\fB\-l\fR, \fB\-\-lines\fR=\fINUMBER\fR
put NUMBER lines/records per output file
.TP
\fB\-n\fR, \fB\-\-number\fR=\fICHUNKS\fR
generate CHUNKS output files; see explanation below
.TP
\fB\-t\fR, \fB\-\-separator\fR=\fISEP\fR
use SEP instead of newline as the record separator;
\&'\e0' (zero) specifies the NUL character
.TP
\fB\-u\fR, \fB\-\-unbuffered\fR
immediately copy input to output with '\-n r/...'
.TP
\fB\-\-verbose\fR
print a diagnostic just before each
output file is opened
.TP
\fB\-\-help\fR
display this help and exit
.TP
\fB\-\-version\fR
output version information and exit
.PP
The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).
.SS "CHUNKS may be:"
.TP
N
split into N files based on size of input
.TP
K/N
output Kth of N to stdout
.TP
l/N
split into N files without splitting lines/records
.TP
l/K/N
output Kth of N to stdout without splitting lines/records
.TP
r/N
like 'l' but use round robin distribution
.TP
r/K/N
likewise but only output Kth of N to stdout
.SH AUTHOR
Written by Torbjorn Granlund and Richard M. Stallman.
.SH "REPORTING BUGS"
GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
.br
Report split translation bugs to <http://translationproject.org/team/>
.SH COPYRIGHT
Copyright \(co 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
Full documentation at: <http://www.gnu.org/software/coreutils/split>
.br
or available locally via: info \(aq(coreutils) split invocation\(aq
